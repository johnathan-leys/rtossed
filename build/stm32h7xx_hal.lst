ARM GAS  /tmp/ccNrQQIQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB146:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @file    stm32h7xx_hal.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @attention
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * Copyright (c) 2017 STMicroelectronics.
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @verbatim
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The HAL contains two APIs' categories:
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @endverbatim
ARM GAS  /tmp/ccNrQQIQ.s 			page 2


  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #include "stm32h7xx_hal.h"
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup STM32H7xx_HAL_Driver
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL  HAL
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @brief STM32H7xx HAL Driver version number V1.11.1
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_MAIN   (0x01UL) /*!< [31:24] main version */
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB1   (0x0BUL) /*!< [23:16] sub1 version */
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB2   (0x01UL) /*!< [15:8]  sub2 version */
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_RC     (0x00UL) /*!< [7:0]  release candidate */
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION         ((__STM32H7xx_HAL_VERSION_MAIN << 24)\
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB1 << 16)\
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB2 << 8 )\
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_RC))
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     (uint32_t)10   /* 10 ms  */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __IO uint32_t uwTick;
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Group1
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
ARM GAS  /tmp/ccNrQQIQ.s 			page 3


  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****               ##### Initialization and de-initialization functions #####
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           and the backup domain when enabled.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) De-Initializes common part of the HAL.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           Tick interrupt priority.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              handled in milliseconds basis.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             ISR process will be blocked.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         HAL function), it performs the following:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           "stm32h7xx_hal_msp.c" to do the global low level hardware initialization
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         to have correct HAL operation.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t common_system_clock;
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    /* Configure Cortex-M4 Instruction cache through ART accelerator */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE &&  CORE_CM4 */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccNrQQIQ.s 			page 4


 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Set Interrupt Group Priority */
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemCoreClock global variable */
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_D1CPRE)
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemD2Clock global variable */
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_HPRE)
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = SystemD2Clock;
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = common_system_clock;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Init the low level hardware */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspInit();
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This function is optional.
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
ARM GAS  /tmp/ccNrQQIQ.s 			page 5


 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_FORCE_RESET();
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_FORCE_RESET();
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_FORCE_RESET();
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_FORCE_RESET();
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* De-Init the low level hardware */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspDeInit();
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Initializes the MSP.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspInit(void)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  28              		.loc 1 229 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  33              		.loc 1 233 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE146:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB147:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  DeInitializes the MSP.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspDeInit(void)
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  47              		.loc 1 240 1 view -0
  48              		.cfi_startproc
ARM GAS  /tmp/ccNrQQIQ.s 			page 6


  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  52              		.loc 1 244 1 view .LVU3
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE147:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB145:
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 188 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  75              		.loc 1 190 3 view .LVU5
  76 0002 194B     		ldr	r3, .L5
  77 0004 194A     		ldr	r2, .L5+4
  78 0006 DA67     		str	r2, [r3, #124]
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  79              		.loc 1 191 3 view .LVU6
  80 0008 0024     		movs	r4, #0
  81 000a DC67     		str	r4, [r3, #124]
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  82              		.loc 1 193 3 view .LVU7
  83 000c 184A     		ldr	r2, .L5+8
  84 000e C3F88020 		str	r2, [r3, #128]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85              		.loc 1 194 3 view .LVU8
  86 0012 C3F88040 		str	r4, [r3, #128]
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  87              		.loc 1 196 3 view .LVU9
  88 0016 40F67522 		movw	r2, #2677
  89 001a C3F88420 		str	r2, [r3, #132]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  90              		.loc 1 197 3 view .LVU10
  91 001e C3F88440 		str	r4, [r3, #132]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
  92              		.loc 1 199 3 view .LVU11
  93 0022 144A     		ldr	r2, .L5+12
  94 0024 C3F88820 		str	r2, [r3, #136]
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccNrQQIQ.s 			page 7


  95              		.loc 1 200 2 view .LVU12
  96 0028 C3F88840 		str	r4, [r3, #136]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  97              		.loc 1 202 3 view .LVU13
  98 002c 0822     		movs	r2, #8
  99 002e C3F88C20 		str	r2, [r3, #140]
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 100              		.loc 1 203 3 view .LVU14
 101 0032 C3F88C40 		str	r4, [r3, #140]
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 102              		.loc 1 205 3 view .LVU15
 103 0036 104A     		ldr	r2, .L5+16
 104 0038 C3F89020 		str	r2, [r3, #144]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 105              		.loc 1 206 3 view .LVU16
 106 003c C3F89040 		str	r4, [r3, #144]
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 107              		.loc 1 208 3 view .LVU17
 108 0040 4FF49B72 		mov	r2, #310
 109 0044 C3F89420 		str	r2, [r3, #148]
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 110              		.loc 1 209 3 view .LVU18
 111 0048 C3F89440 		str	r4, [r3, #148]
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 112              		.loc 1 211 4 view .LVU19
 113 004c 0B4A     		ldr	r2, .L5+20
 114 004e C3F89820 		str	r2, [r3, #152]
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 115              		.loc 1 212 4 view .LVU20
 116 0052 C3F89840 		str	r4, [r3, #152]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 117              		.loc 1 214 3 view .LVU21
 118 0056 0A4A     		ldr	r2, .L5+24
 119 0058 C3F89C20 		str	r2, [r3, #156]
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 120              		.loc 1 215 3 view .LVU22
 121 005c C3F89C40 		str	r4, [r3, #156]
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 122              		.loc 1 218 3 view .LVU23
 123 0060 FFF7FEFF 		bl	HAL_MspDeInit
 124              	.LVL0:
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 125              		.loc 1 221 3 view .LVU24
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 126              		.loc 1 222 1 is_stmt 0 view .LVU25
 127 0064 2046     		mov	r0, r4
 128 0066 10BD     		pop	{r4, pc}
 129              	.L6:
 130              		.align	2
 131              	.L5:
 132 0068 00440258 		.word	1476543488
 133 006c 3150E901 		.word	32067633
 134 0070 23020002 		.word	33554979
 135 0074 FF072000 		.word	2099199
 136 0078 FFC3FFE8 		.word	-385891329
 137 007c F330D740 		.word	1087844595
 138 0080 AAE6000C 		.word	201385642
ARM GAS  /tmp/ccNrQQIQ.s 			page 8


 139              		.cfi_endproc
 140              	.LFE145:
 142              		.section	.text.HAL_InitTick,"ax",%progbits
 143              		.align	1
 144              		.weak	HAL_InitTick
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	HAL_InitTick:
 150              	.LVL1:
 151              	.LFB148:
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function configures the source of the time base.
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        Tick interrupt priority.
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       the SysTick interrupt must have higher priority (numerically lower)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementation  in user file.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 152              		.loc 1 263 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if((uint32_t)uwTickFreq == 0UL)
 156              		.loc 1 265 3 view .LVU27
 157              		.loc 1 265 27 is_stmt 0 view .LVU28
 158 0000 104B     		ldr	r3, .L18
 159 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160              		.loc 1 265 5 view .LVU29
 161 0004 0BB9     		cbnz	r3, .L16
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 162              		.loc 1 267 12 view .LVU30
 163 0006 0120     		movs	r0, #1
 164              	.LVL2:
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
ARM GAS  /tmp/ccNrQQIQ.s 			page 9


 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 165              		.loc 1 289 1 view .LVU31
 166 0008 7047     		bx	lr
 167              	.LVL3:
 168              	.L16:
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 169              		.loc 1 263 1 view .LVU32
 170 000a 10B5     		push	{r4, lr}
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175 000c 0446     		mov	r4, r0
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 176              		.loc 1 271 5 is_stmt 1 view .LVU33
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 177              		.loc 1 271 54 is_stmt 0 view .LVU34
 178 000e 4FF47A70 		mov	r0, #1000
 179              	.LVL4:
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 180              		.loc 1 271 54 view .LVU35
 181 0012 B0FBF3F3 		udiv	r3, r0, r3
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 182              		.loc 1 271 9 view .LVU36
 183 0016 0C4A     		ldr	r2, .L18+4
 184 0018 1068     		ldr	r0, [r2]
 185 001a B0FBF3F0 		udiv	r0, r0, r3
 186 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 187              	.LVL5:
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 188              		.loc 1 271 8 view .LVU37
 189 0022 68B9     		cbnz	r0, .L10
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 190              		.loc 1 277 3 is_stmt 1 view .LVU38
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 191              		.loc 1 277 6 is_stmt 0 view .LVU39
 192 0024 0F2C     		cmp	r4, #15
 193 0026 01D9     		bls	.L17
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 194              		.loc 1 284 12 view .LVU40
 195 0028 0120     		movs	r0, #1
 196 002a 0AE0     		b	.L8
 197              	.L17:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 198              		.loc 1 279 5 is_stmt 1 view .LVU41
 199 002c 0022     		movs	r2, #0
ARM GAS  /tmp/ccNrQQIQ.s 			page 10


 200 002e 2146     		mov	r1, r4
 201 0030 4FF0FF30 		mov	r0, #-1
 202 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL6:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 204              		.loc 1 280 5 view .LVU42
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 205              		.loc 1 280 16 is_stmt 0 view .LVU43
 206 0038 044B     		ldr	r3, .L18+8
 207 003a 1C60     		str	r4, [r3]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 208              		.loc 1 288 3 is_stmt 1 view .LVU44
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 209              		.loc 1 288 10 is_stmt 0 view .LVU45
 210 003c 0020     		movs	r0, #0
 211 003e 00E0     		b	.L8
 212              	.L10:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 213              		.loc 1 273 14 view .LVU46
 214 0040 0120     		movs	r0, #1
 215              	.L8:
 216              		.loc 1 289 1 view .LVU47
 217 0042 10BD     		pop	{r4, pc}
 218              	.LVL7:
 219              	.L19:
 220              		.loc 1 289 1 view .LVU48
 221              		.align	2
 222              	.L18:
 223 0044 00000000 		.word	uwTickFreq
 224 0048 00000000 		.word	SystemCoreClock
 225 004c 00000000 		.word	uwTickPrio
 226              		.cfi_endproc
 227              	.LFE148:
 229              		.section	.text.HAL_Init,"ax",%progbits
 230              		.align	1
 231              		.global	HAL_Init
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	HAL_Init:
 237              	.LFB144:
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 238              		.loc 1 135 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 10B5     		push	{r4, lr}
 243              	.LCFI2:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 247              		.loc 1 137 1 view .LVU50
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 248              		.loc 1 147 3 view .LVU51
 249 0002 0320     		movs	r0, #3
 250 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
ARM GAS  /tmp/ccNrQQIQ.s 			page 11


 251              	.LVL8:
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 252              		.loc 1 153 3 view .LVU52
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 253              		.loc 1 153 25 is_stmt 0 view .LVU53
 254 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 255              	.LVL9:
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 256              		.loc 1 153 77 view .LVU54
 257 000c 0F49     		ldr	r1, .L25
 258 000e 8B69     		ldr	r3, [r1, #24]
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 259              		.loc 1 153 108 view .LVU55
 260 0010 C3F30323 		ubfx	r3, r3, #8, #4
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 261              		.loc 1 153 72 view .LVU56
 262 0014 0E4A     		ldr	r2, .L25+4
 263 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 264              		.loc 1 153 136 view .LVU57
 265 0018 03F01F03 		and	r3, r3, #31
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 266              		.loc 1 153 23 view .LVU58
 267 001c D840     		lsrs	r0, r0, r3
 268              	.LVL10:
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 269              		.loc 1 160 3 is_stmt 1 view .LVU59
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 270              		.loc 1 160 66 is_stmt 0 view .LVU60
 271 001e 8B69     		ldr	r3, [r1, #24]
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 272              		.loc 1 160 95 view .LVU61
 273 0020 03F00F03 		and	r3, r3, #15
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 274              		.loc 1 160 61 view .LVU62
 275 0024 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 276              		.loc 1 160 121 view .LVU63
 277 0026 03F01F03 		and	r3, r3, #31
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 278              		.loc 1 160 40 view .LVU64
 279 002a 20FA03F3 		lsr	r3, r0, r3
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 280              		.loc 1 160 17 view .LVU65
 281 002e 094A     		ldr	r2, .L25+8
 282 0030 1360     		str	r3, [r2]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 283              		.loc 1 166 3 is_stmt 1 view .LVU66
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 284              		.loc 1 166 19 is_stmt 0 view .LVU67
 285 0032 094B     		ldr	r3, .L25+12
 286 0034 1860     		str	r0, [r3]
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 287              		.loc 1 170 3 is_stmt 1 view .LVU68
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 288              		.loc 1 170 6 is_stmt 0 view .LVU69
 289 0036 0020     		movs	r0, #0
ARM GAS  /tmp/ccNrQQIQ.s 			page 12


 290              	.LVL11:
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 291              		.loc 1 170 6 view .LVU70
 292 0038 FFF7FEFF 		bl	HAL_InitTick
 293              	.LVL12:
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 294              		.loc 1 170 5 view .LVU71
 295 003c 10B1     		cbz	r0, .L24
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 296              		.loc 1 172 12 view .LVU72
 297 003e 0124     		movs	r4, #1
 298              	.L21:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 299              		.loc 1 180 1 view .LVU73
 300 0040 2046     		mov	r0, r4
 301 0042 10BD     		pop	{r4, pc}
 302              	.L24:
 303 0044 0446     		mov	r4, r0
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 304              		.loc 1 176 3 is_stmt 1 view .LVU74
 305 0046 FFF7FEFF 		bl	HAL_MspInit
 306              	.LVL13:
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 307              		.loc 1 179 3 view .LVU75
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 308              		.loc 1 179 10 is_stmt 0 view .LVU76
 309 004a F9E7     		b	.L21
 310              	.L26:
 311              		.align	2
 312              	.L25:
 313 004c 00440258 		.word	1476543488
 314 0050 00000000 		.word	D1CorePrescTable
 315 0054 00000000 		.word	SystemD2Clock
 316 0058 00000000 		.word	SystemCoreClock
 317              		.cfi_endproc
 318              	.LFE144:
 320              		.section	.text.HAL_IncTick,"ax",%progbits
 321              		.align	1
 322              		.weak	HAL_IncTick
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	HAL_IncTick:
 328              	.LFB149:
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Group2
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    HAL Control functions
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                       ##### HAL Control functions #####
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
ARM GAS  /tmp/ccNrQQIQ.s 			page 13


 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a tick value in millisecond
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Suspend the time base source interrupt
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Resume the time base source interrupt
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the HAL API driver version
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device identifier
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device revision identifier
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        used as application time base.
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       in Systick ISR.
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *      implementations in user file.
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_IncTick(void)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 329              		.loc 1 328 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 334              		.loc 1 329 3 view .LVU78
 335              		.loc 1 329 13 is_stmt 0 view .LVU79
 336 0000 034B     		ldr	r3, .L28
 337 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338              		.loc 1 329 10 view .LVU80
 339 0004 034A     		ldr	r2, .L28+4
 340 0006 1168     		ldr	r1, [r2]
 341 0008 0B44     		add	r3, r3, r1
 342 000a 1360     		str	r3, [r2]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 343              		.loc 1 330 1 view .LVU81
 344 000c 7047     		bx	lr
 345              	.L29:
 346 000e 00BF     		.align	2
 347              	.L28:
 348 0010 00000000 		.word	uwTickFreq
 349 0014 00000000 		.word	uwTick
 350              		.cfi_endproc
 351              	.LFE149:
 353              		.section	.text.HAL_GetTick,"ax",%progbits
 354              		.align	1
 355              		.weak	HAL_GetTick
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
ARM GAS  /tmp/ccNrQQIQ.s 			page 14


 360              	HAL_GetTick:
 361              	.LFB150:
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick value
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 362              		.loc 1 339 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTick;
 367              		.loc 1 340 3 view .LVU83
 368              		.loc 1 340 10 is_stmt 0 view .LVU84
 369 0000 014B     		ldr	r3, .L31
 370 0002 1868     		ldr	r0, [r3]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 371              		.loc 1 341 1 view .LVU85
 372 0004 7047     		bx	lr
 373              	.L32:
 374 0006 00BF     		.align	2
 375              	.L31:
 376 0008 00000000 		.word	uwTick
 377              		.cfi_endproc
 378              	.LFE150:
 380              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 381              		.align	1
 382              		.global	HAL_GetTickPrio
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	HAL_GetTickPrio:
 388              	.LFB151:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function returns a tick priority.
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick priority
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 389              		.loc 1 348 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickPrio;
 394              		.loc 1 349 3 view .LVU87
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 395              		.loc 1 350 1 is_stmt 0 view .LVU88
 396 0000 014B     		ldr	r3, .L34
 397 0002 1868     		ldr	r0, [r3]
 398 0004 7047     		bx	lr
ARM GAS  /tmp/ccNrQQIQ.s 			page 15


 399              	.L35:
 400 0006 00BF     		.align	2
 401              	.L34:
 402 0008 00000000 		.word	uwTickPrio
 403              		.cfi_endproc
 404              	.LFE151:
 406              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 407              		.align	1
 408              		.global	HAL_SetTickFreq
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 413              	HAL_SetTickFreq:
 414              	.LVL14:
 415              	.LFB152:
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Set new tick Freq.
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Status
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 416              		.loc 1 357 1 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		.loc 1 357 1 is_stmt 0 view .LVU90
 421 0000 10B5     		push	{r4, lr}
 422              	.LCFI3:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 4, -8
 425              		.cfi_offset 14, -4
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 426              		.loc 1 358 3 is_stmt 1 view .LVU91
 427              	.LVL15:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 428              		.loc 1 359 3 view .LVU92
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 429              		.loc 1 361 3 view .LVU93
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (uwTickFreq != Freq)
 430              		.loc 1 363 3 view .LVU94
 431              		.loc 1 363 18 is_stmt 0 view .LVU95
 432 0002 084B     		ldr	r3, .L41
 433 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 434              		.loc 1 363 6 view .LVU96
 435 0006 8442     		cmp	r4, r0
 436 0008 01D1     		bne	.L40
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 437              		.loc 1 358 21 view .LVU97
 438 000a 0020     		movs	r0, #0
 439              	.LVL16:
 440              	.L37:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Back up uwTickFreq frequency */
ARM GAS  /tmp/ccNrQQIQ.s 			page 16


 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     prevTickFreq = uwTickFreq;
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickFreq = Freq;
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Apply the new tick Freq  */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Restore previous tick frequency */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       uwTickFreq = prevTickFreq;
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return status;
 441              		.loc 1 381 3 is_stmt 1 view .LVU98
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 442              		.loc 1 382 1 is_stmt 0 view .LVU99
 443 000c 10BD     		pop	{r4, pc}
 444              	.LVL17:
 445              	.L40:
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 446              		.loc 1 367 5 is_stmt 1 view .LVU100
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 447              		.loc 1 370 5 view .LVU101
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 448              		.loc 1 370 16 is_stmt 0 view .LVU102
 449 000e 1870     		strb	r0, [r3]
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 450              		.loc 1 373 5 is_stmt 1 view .LVU103
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 451              		.loc 1 373 14 is_stmt 0 view .LVU104
 452 0010 054B     		ldr	r3, .L41+4
 453 0012 1868     		ldr	r0, [r3]
 454              	.LVL18:
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 455              		.loc 1 373 14 view .LVU105
 456 0014 FFF7FEFF 		bl	HAL_InitTick
 457              	.LVL19:
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 458              		.loc 1 374 5 is_stmt 1 view .LVU106
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 459              		.loc 1 374 8 is_stmt 0 view .LVU107
 460 0018 0028     		cmp	r0, #0
 461 001a F7D0     		beq	.L37
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 462              		.loc 1 377 7 is_stmt 1 view .LVU108
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 463              		.loc 1 377 18 is_stmt 0 view .LVU109
 464 001c 014B     		ldr	r3, .L41
 465 001e 1C70     		strb	r4, [r3]
 466 0020 F4E7     		b	.L37
 467              	.L42:
 468 0022 00BF     		.align	2
 469              	.L41:
 470 0024 00000000 		.word	uwTickFreq
 471 0028 00000000 		.word	uwTickPrio
ARM GAS  /tmp/ccNrQQIQ.s 			page 17


 472              		.cfi_endproc
 473              	.LFE152:
 475              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 476              		.align	1
 477              		.global	HAL_GetTickFreq
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 482              	HAL_GetTickFreq:
 483              	.LFB153:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Return tick frequency.
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick period in Hz
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 484              		.loc 1 389 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickFreq;
 489              		.loc 1 390 3 view .LVU111
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 490              		.loc 1 391 1 is_stmt 0 view .LVU112
 491 0000 014B     		ldr	r3, .L44
 492 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 493 0004 7047     		bx	lr
 494              	.L45:
 495 0006 00BF     		.align	2
 496              	.L44:
 497 0008 00000000 		.word	uwTickFreq
 498              		.cfi_endproc
 499              	.LFE153:
 501              		.section	.text.HAL_Delay,"ax",%progbits
 502              		.align	1
 503              		.weak	HAL_Delay
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	HAL_Delay:
 509              	.LVL20:
 510              	.LFB154:
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        on variable incremented.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is incremented.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
ARM GAS  /tmp/ccNrQQIQ.s 			page 18


 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 511              		.loc 1 405 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		.loc 1 405 1 is_stmt 0 view .LVU114
 516 0000 38B5     		push	{r3, r4, r5, lr}
 517              	.LCFI4:
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 3, -16
 520              		.cfi_offset 4, -12
 521              		.cfi_offset 5, -8
 522              		.cfi_offset 14, -4
 523 0002 0446     		mov	r4, r0
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 524              		.loc 1 406 3 is_stmt 1 view .LVU115
 525              		.loc 1 406 24 is_stmt 0 view .LVU116
 526 0004 FFF7FEFF 		bl	HAL_GetTick
 527              	.LVL21:
 528              		.loc 1 406 24 view .LVU117
 529 0008 0546     		mov	r5, r0
 530              	.LVL22:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t wait = Delay;
 531              		.loc 1 407 3 is_stmt 1 view .LVU118
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 532              		.loc 1 410 3 view .LVU119
 533              		.loc 1 410 6 is_stmt 0 view .LVU120
 534 000a B4F1FF3F 		cmp	r4, #-1
 535 000e 02D0     		beq	.L48
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 536              		.loc 1 412 5 is_stmt 1 view .LVU121
 537              		.loc 1 412 13 is_stmt 0 view .LVU122
 538 0010 044B     		ldr	r3, .L50
 539 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 540              		.loc 1 412 10 view .LVU123
 541 0014 1C44     		add	r4, r4, r3
 542              	.LVL23:
 543              	.L48:
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 544              		.loc 1 417 3 is_stmt 1 discriminator 1 view .LVU124
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 545              		.loc 1 415 38 discriminator 1 view .LVU125
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 546              		.loc 1 415 11 is_stmt 0 discriminator 1 view .LVU126
 547 0016 FFF7FEFF 		bl	HAL_GetTick
 548              	.LVL24:
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 549              		.loc 1 415 25 discriminator 1 view .LVU127
 550 001a 401B     		subs	r0, r0, r5
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
ARM GAS  /tmp/ccNrQQIQ.s 			page 19


 551              		.loc 1 415 38 discriminator 1 view .LVU128
 552 001c A042     		cmp	r0, r4
 553 001e FAD3     		bcc	.L48
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 554              		.loc 1 418 1 view .LVU129
 555 0020 38BD     		pop	{r3, r4, r5, pc}
 556              	.LVL25:
 557              	.L51:
 558              		.loc 1 418 1 view .LVU130
 559 0022 00BF     		.align	2
 560              	.L50:
 561 0024 00000000 		.word	uwTickFreq
 562              		.cfi_endproc
 563              	.LFE154:
 565              		.section	.text.HAL_SuspendTick,"ax",%progbits
 566              		.align	1
 567              		.weak	HAL_SuspendTick
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HAL_SuspendTick:
 573              	.LFB155:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Suspend Tick increment.
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is suspended.
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_SuspendTick(void)
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 574              		.loc 1 431 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Disable SysTick Interrupt */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 579              		.loc 1 433 3 view .LVU132
 580              		.loc 1 433 10 is_stmt 0 view .LVU133
 581 0000 4FF0E022 		mov	r2, #-536813568
 582 0004 1369     		ldr	r3, [r2, #16]
 583              		.loc 1 433 17 view .LVU134
 584 0006 23F00203 		bic	r3, r3, #2
 585 000a 1361     		str	r3, [r2, #16]
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 586              		.loc 1 434 1 view .LVU135
 587 000c 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE155:
 591              		.section	.text.HAL_ResumeTick,"ax",%progbits
 592              		.align	1
 593              		.weak	HAL_ResumeTick
ARM GAS  /tmp/ccNrQQIQ.s 			page 20


 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 598              	HAL_ResumeTick:
 599              	.LFB156:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Resume Tick increment.
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is resumed.
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_ResumeTick(void)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 600              		.loc 1 447 1 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Enable SysTick Interrupt */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 605              		.loc 1 449 3 view .LVU137
 606              		.loc 1 449 10 is_stmt 0 view .LVU138
 607 0000 4FF0E022 		mov	r2, #-536813568
 608 0004 1369     		ldr	r3, [r2, #16]
 609              		.loc 1 449 18 view .LVU139
 610 0006 43F00203 		orr	r3, r3, #2
 611 000a 1361     		str	r3, [r2, #16]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 612              		.loc 1 450 1 view .LVU140
 613 000c 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE156:
 617              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 618              		.align	1
 619              		.global	HAL_GetHalVersion
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	HAL_GetHalVersion:
 625              	.LFB157:
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the HAL revision
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 626              		.loc 1 457 1 is_stmt 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
ARM GAS  /tmp/ccNrQQIQ.s 			page 21


 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  return __STM32H7xx_HAL_VERSION;
 631              		.loc 1 458 2 view .LVU142
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 632              		.loc 1 459 1 is_stmt 0 view .LVU143
 633 0000 0048     		ldr	r0, .L55
 634 0002 7047     		bx	lr
 635              	.L56:
 636              		.align	2
 637              	.L55:
 638 0004 00010B01 		.word	17498368
 639              		.cfi_endproc
 640              	.LFE157:
 642              		.section	.text.HAL_GetREVID,"ax",%progbits
 643              		.align	1
 644              		.global	HAL_GetREVID
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 649              	HAL_GetREVID:
 650              	.LFB158:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device revision identifier.
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device revision identifier
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetREVID(void)
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 651              		.loc 1 466 1 is_stmt 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 656              		.loc 1 467 4 view .LVU145
 657              		.loc 1 467 18 is_stmt 0 view .LVU146
 658 0000 014B     		ldr	r3, .L58
 659 0002 1868     		ldr	r0, [r3]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 660              		.loc 1 468 1 view .LVU147
 661 0004 000C     		lsrs	r0, r0, #16
 662 0006 7047     		bx	lr
 663              	.L59:
 664              		.align	2
 665              	.L58:
 666 0008 0010005C 		.word	1543507968
 667              		.cfi_endproc
 668              	.LFE158:
 670              		.section	.text.HAL_GetDEVID,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_GetDEVID
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	HAL_GetDEVID:
 678              	.LFB159:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
ARM GAS  /tmp/ccNrQQIQ.s 			page 22


 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device identifier.
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 679              		.loc 1 475 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 684              		.loc 1 476 4 view .LVU149
 685              		.loc 1 476 18 is_stmt 0 view .LVU150
 686 0000 024B     		ldr	r3, .L61
 687 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 688              		.loc 1 477 1 view .LVU151
 689 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 690 0008 7047     		bx	lr
 691              	.L62:
 692 000a 00BF     		.align	2
 693              	.L61:
 694 000c 0010005C 		.word	1543507968
 695              		.cfi_endproc
 696              	.LFE159:
 698              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 699              		.align	1
 700              		.global	HAL_GetUIDw0
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	HAL_GetUIDw0:
 706              	.LFB160:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 707              		.loc 1 484 1 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 712              		.loc 1 485 3 view .LVU153
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 713              		.loc 1 486 1 is_stmt 0 view .LVU154
 714 0000 014B     		ldr	r3, .L64
 715 0002 D3F80008 		ldr	r0, [r3, #2048]
 716 0006 7047     		bx	lr
 717              	.L65:
 718              		.align	2
 719              	.L64:
 720 0008 00F0FF08 		.word	150990848
 721              		.cfi_endproc
ARM GAS  /tmp/ccNrQQIQ.s 			page 23


 722              	.LFE160:
 724              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 725              		.align	1
 726              		.global	HAL_GetUIDw1
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 731              	HAL_GetUIDw1:
 732              	.LFB161:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 733              		.loc 1 493 1 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 738              		.loc 1 494 3 view .LVU156
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 739              		.loc 1 495 1 is_stmt 0 view .LVU157
 740 0000 014B     		ldr	r3, .L67
 741 0002 D3F80408 		ldr	r0, [r3, #2052]
 742 0006 7047     		bx	lr
 743              	.L68:
 744              		.align	2
 745              	.L67:
 746 0008 00F0FF08 		.word	150990848
 747              		.cfi_endproc
 748              	.LFE161:
 750              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 751              		.align	1
 752              		.global	HAL_GetUIDw2
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 757              	HAL_GetUIDw2:
 758              	.LFB162:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 759              		.loc 1 502 1 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 764              		.loc 1 503 3 view .LVU159
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/ccNrQQIQ.s 			page 24


 765              		.loc 1 504 1 is_stmt 0 view .LVU160
 766 0000 014B     		ldr	r3, .L70
 767 0002 D3F80808 		ldr	r0, [r3, #2056]
 768 0006 7047     		bx	lr
 769              	.L71:
 770              		.align	2
 771              	.L70:
 772 0008 00F0FF08 		.word	150990848
 773              		.cfi_endproc
 774              	.LFE162:
 776              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
 777              		.align	1
 778              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 784              	.LVL26:
 785              	.LFB163:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param VoltageScaling  specifies the output voltage to achieve
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.5 V.
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.048 V.
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.8 V.
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.5 V.
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 786              		.loc 1 521 1 is_stmt 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 791              		.loc 1 523 3 view .LVU162
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 792              		.loc 1 525 3 view .LVU163
 793 0000 034A     		ldr	r2, .L73
 794 0002 1368     		ldr	r3, [r2]
 795 0004 23F07003 		bic	r3, r3, #112
 796 0008 0343     		orrs	r3, r3, r0
 797 000a 1360     		str	r3, [r2]
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 798              		.loc 1 526 1 is_stmt 0 view .LVU164
 799 000c 7047     		bx	lr
 800              	.L74:
 801 000e 00BF     		.align	2
ARM GAS  /tmp/ccNrQQIQ.s 			page 25


 802              	.L73:
 803 0010 003C0058 		.word	1476410368
 804              		.cfi_endproc
 805              	.LFE163:
 807              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 808              		.align	1
 809              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 814              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
 815              	.LVL27:
 816              	.LFB164:
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Mode  specifies the high impedance mode
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFI
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 817              		.loc 1 537 1 is_stmt 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 822              		.loc 1 539 3 view .LVU166
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 823              		.loc 1 541 3 view .LVU167
 824 0000 034A     		ldr	r2, .L76
 825 0002 1368     		ldr	r3, [r2]
 826 0004 23F00203 		bic	r3, r3, #2
 827 0008 0343     		orrs	r3, r3, r0
 828 000a 1360     		str	r3, [r2]
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 829              		.loc 1 542 1 is_stmt 0 view .LVU168
 830 000c 7047     		bx	lr
 831              	.L77:
 832 000e 00BF     		.align	2
 833              	.L76:
 834 0010 003C0058 		.word	1476410368
 835              		.cfi_endproc
 836              	.LFE164:
 838              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 846              	.LVL28:
ARM GAS  /tmp/ccNrQQIQ.s 			page 26


 847              	.LFB165:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 848              		.loc 1 549 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 853              		.loc 1 551 3 view .LVU170
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 854              		.loc 1 553 3 view .LVU171
 855 0000 034A     		ldr	r2, .L79
 856 0002 5368     		ldr	r3, [r2, #4]
 857 0004 23F03F03 		bic	r3, r3, #63
 858 0008 0343     		orrs	r3, r3, r0
 859 000a 5360     		str	r3, [r2, #4]
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 860              		.loc 1 554 1 is_stmt 0 view .LVU172
 861 000c 7047     		bx	lr
 862              	.L80:
 863 000e 00BF     		.align	2
 864              	.L79:
 865 0010 003C0058 		.word	1476410368
 866              		.cfi_endproc
 867              	.LFE165:
 869              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 870              		.align	1
 871              		.global	HAL_SYSCFG_EnableVREFBUF
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 876              	HAL_SYSCFG_EnableVREFBUF:
 877              	.LFB166:
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 878              		.loc 1 561 1 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 10B5     		push	{r4, lr}
 883              	.LCFI5:
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 4, -8
 886              		.cfi_offset 14, -4
ARM GAS  /tmp/ccNrQQIQ.s 			page 27


 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t  tickstart;
 887              		.loc 1 562 3 view .LVU174
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 888              		.loc 1 564 3 view .LVU175
 889 0002 0B4A     		ldr	r2, .L88
 890 0004 1368     		ldr	r3, [r2]
 891 0006 43F00103 		orr	r3, r3, #1
 892 000a 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Get Start Tick*/
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   tickstart = HAL_GetTick();
 893              		.loc 1 567 3 view .LVU176
 894              		.loc 1 567 15 is_stmt 0 view .LVU177
 895 000c FFF7FEFF 		bl	HAL_GetTick
 896              	.LVL29:
 897 0010 0446     		mov	r4, r0
 898              	.LVL30:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Wait for VRR bit  */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 899              		.loc 1 570 3 is_stmt 1 view .LVU178
 900              	.L82:
 901              		.loc 1 570 49 view .LVU179
 902              		.loc 1 570 9 is_stmt 0 view .LVU180
 903 0012 074B     		ldr	r3, .L88
 904 0014 1B68     		ldr	r3, [r3]
 905              		.loc 1 570 49 view .LVU181
 906 0016 13F0080F 		tst	r3, #8
 907 001a 06D1     		bne	.L87
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 908              		.loc 1 572 5 is_stmt 1 view .LVU182
 909              		.loc 1 572 9 is_stmt 0 view .LVU183
 910 001c FFF7FEFF 		bl	HAL_GetTick
 911              	.LVL31:
 912              		.loc 1 572 23 view .LVU184
 913 0020 001B     		subs	r0, r0, r4
 914              		.loc 1 572 7 view .LVU185
 915 0022 0A28     		cmp	r0, #10
 916 0024 F5D9     		bls	.L82
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_TIMEOUT;
 917              		.loc 1 574 14 view .LVU186
 918 0026 0320     		movs	r0, #3
 919 0028 00E0     		b	.L83
 920              	.L87:
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 921              		.loc 1 578 10 view .LVU187
 922 002a 0020     		movs	r0, #0
 923              	.L83:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 924              		.loc 1 579 1 view .LVU188
 925 002c 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccNrQQIQ.s 			page 28


 926              	.LVL32:
 927              	.L89:
 928              		.loc 1 579 1 view .LVU189
 929 002e 00BF     		.align	2
 930              	.L88:
 931 0030 003C0058 		.word	1476410368
 932              		.cfi_endproc
 933              	.LFE166:
 935              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 936              		.align	1
 937              		.global	HAL_SYSCFG_DisableVREFBUF
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 942              	HAL_SYSCFG_DisableVREFBUF:
 943              	.LFB167:
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 944              		.loc 1 587 1 is_stmt 1 view -0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 949              		.loc 1 588 3 view .LVU191
 950 0000 024A     		ldr	r2, .L91
 951 0002 1368     		ldr	r3, [r2]
 952 0004 23F00103 		bic	r3, r3, #1
 953 0008 1360     		str	r3, [r2]
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 954              		.loc 1 589 1 is_stmt 0 view .LVU192
 955 000a 7047     		bx	lr
 956              	.L92:
 957              		.align	2
 958              	.L91:
 959 000c 003C0058 		.word	1476410368
 960              		.cfi_endproc
 961              	.LFE167:
 963              		.section	.text.HAL_SYSCFG_AnalogSwitchConfig,"ax",%progbits
 964              		.align	1
 965              		.global	HAL_SYSCFG_AnalogSwitchConfig
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 970              	HAL_SYSCFG_AnalogSwitchConfig:
 971              	.LVL33:
 972              	.LFB168:
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_EPIS_SEL)
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
ARM GAS  /tmp/ccNrQQIQ.s 			page 29


 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_ETHInterface: Selects the Ethernet PHY interface
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_MII : Select the Media Independent Interface
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_RMII: Select the Reduced Media Independent Interface
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ETHInterfaceSelect(uint32_t SYSCFG_ETHInterface)
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ETHERNET_CONFIG(SYSCFG_ETHInterface));
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, SYSCFG_PMCR_EPIS_SEL, (uint32_t)(SYSCFG_ETHInterface));
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_EPIS_SEL */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Analog Switch control for dual analog pads.
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_AnalogSwitch: Selects the analog pad
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0 : Select PA0 analog switch
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1:  Select PA1 analog switch
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2 : Select PC2 analog switch
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3:  Select PC3 analog switch
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_SwitchState: Open or Close the analog switch between dual pads (PXn and PXn_C)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_OPEN
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_CLOSE
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_OPEN
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_CLOSE
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_OPEN
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_CLOSE
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_OPEN
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_CLOSE
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 973              		.loc 1 631 1 is_stmt 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
 978              		.loc 1 633 3 view .LVU194
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));
 979              		.loc 1 634 3 view .LVU195
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 980              		.loc 1 636 3 view .LVU196
 981 0000 034A     		ldr	r2, .L94
 982 0002 5368     		ldr	r3, [r2, #4]
 983 0004 23EA0003 		bic	r3, r3, r0
 984 0008 0B43     		orrs	r3, r3, r1
 985 000a 5360     		str	r3, [r2, #4]
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/ccNrQQIQ.s 			page 30


 986              		.loc 1 637 1 is_stmt 0 view .LVU197
 987 000c 7047     		bx	lr
 988              	.L95:
 989 000e 00BF     		.align	2
 990              	.L94:
 991 0010 00040058 		.word	1476396032
 992              		.cfi_endproc
 993              	.LFE168:
 995              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 996              		.align	1
 997              		.global	HAL_EnableCompensationCell
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1002              	HAL_EnableCompensationCell:
 1003              	.LFB169:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_BOOSTEN)
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the booster to reduce the total harmonic distortion of the analog
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         switch when the supply voltage is lower than 2.7 V.
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableBOOST(void)
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the booster
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableBOOST(void)
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_BOOSTEN */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined (SYSCFG_UR2_BOOT_ADD0) ||  defined (SYSCFG_UR2_BCM7_ADD0)
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM7 address 0 configuration
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM7 Boot Address to be loaded in Address0 or Address1
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM7BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
ARM GAS  /tmp/ccNrQQIQ.s 			page 31


 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD0 */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BCM7_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BCM7_ADD0_Pos)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BOOT_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BOOT_ADD0_Pos)
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD1 */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM7_ADD1, (BootAddress >> 16));
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BOOT_ADD1, (BootAddress >> 16));
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_UR2_BOOT_ADD0 || SYSCFG_UR2_BCM7_ADD0 */
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM4 address 0 configuration
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM4 Boot Address to be loaded in Address0 or Address1
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM4BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD0 */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM4_ADD0, ((BootAddress >> 16)<< SYSCFG_UR3_BCM4_ADD0_Pos))
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD1 */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR4, SYSCFG_UR4_BCM4_ADD1, (BootAddress >> 16));
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M7 boot
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM7BOOT(void)
ARM GAS  /tmp/ccNrQQIQ.s 			page 32


 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M7 boot
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM7BOOT(void)
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7) ;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M4 boot
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM4BOOT(void)
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M4 boot
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM4BOOT(void)
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 1.62 to 2.0 V and from 2.7 to 3.6 V.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableCompensationCell(void)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1004              		.loc 1 776 1 is_stmt 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN) ;
 1009              		.loc 1 777 3 view .LVU199
 1010 0000 024A     		ldr	r2, .L97
 1011 0002 136A     		ldr	r3, [r2, #32]
 1012 0004 43F00103 		orr	r3, r3, #1
 1013 0008 1362     		str	r3, [r2, #32]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1014              		.loc 1 778 1 is_stmt 0 view .LVU200
 1015 000a 7047     		bx	lr
 1016              	.L98:
 1017              		.align	2
ARM GAS  /tmp/ccNrQQIQ.s 			page 33


 1018              	.L97:
 1019 000c 00040058 		.word	1476396032
 1020              		.cfi_endproc
 1021              	.LFE169:
 1023              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1024              		.align	1
 1025              		.global	HAL_DisableCompensationCell
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	HAL_DisableCompensationCell:
 1031              	.LFB170:
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 1.62 to 2.0 V and from 2.7 to 3.6 V.
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableCompensationCell(void)
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1032              		.loc 1 787 1 is_stmt 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN);
 1037              		.loc 1 788 3 view .LVU202
 1038 0000 024A     		ldr	r2, .L100
 1039 0002 136A     		ldr	r3, [r2, #32]
 1040 0004 23F00103 		bic	r3, r3, #1
 1041 0008 1362     		str	r3, [r2, #32]
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1042              		.loc 1 789 1 is_stmt 0 view .LVU203
 1043 000a 7047     		bx	lr
 1044              	.L101:
 1045              		.align	2
 1046              	.L100:
 1047 000c 00040058 		.word	1476396032
 1048              		.cfi_endproc
 1049              	.LFE170:
 1051              		.section	.text.HAL_SYSCFG_EnableIOSpeedOptimize,"ax",%progbits
 1052              		.align	1
 1053              		.global	HAL_SYSCFG_EnableIOSpeedOptimize
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1058              	HAL_SYSCFG_EnableIOSpeedOptimize:
 1059              	.LFB171:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Enable optimize the I/O speed when the product voltage is low.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccNrQQIQ.s 			page 34


 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableIOSpeedOptimize(void)
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1060              		.loc 1 800 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_CCC
 1065              		.loc 1 804 3 view .LVU205
 1066 0000 024A     		ldr	r2, .L103
 1067 0002 136A     		ldr	r3, [r2, #32]
 1068 0004 43F47023 		orr	r3, r3, #983040
 1069 0008 1362     		str	r3, [r2, #32]
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1070              		.loc 1 806 1 is_stmt 0 view .LVU206
 1071 000a 7047     		bx	lr
 1072              	.L104:
 1073              		.align	2
 1074              	.L103:
 1075 000c 00040058 		.word	1476396032
 1076              		.cfi_endproc
 1077              	.LFE171:
 1079              		.section	.text.HAL_SYSCFG_DisableIOSpeedOptimize,"ax",%progbits
 1080              		.align	1
 1081              		.global	HAL_SYSCFG_DisableIOSpeedOptimize
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1086              	HAL_SYSCFG_DisableIOSpeedOptimize:
 1087              	.LFB172:
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Disable optimize the I/O speed when the product voltage is low.
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableIOSpeedOptimize(void)
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1088              		.loc 1 816 1 is_stmt 1 view -0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_C
 1093              		.loc 1 820 3 view .LVU208
 1094 0000 024A     		ldr	r2, .L106
 1095 0002 136A     		ldr	r3, [r2, #32]
ARM GAS  /tmp/ccNrQQIQ.s 			page 35


 1096 0004 23F47023 		bic	r3, r3, #983040
 1097 0008 1362     		str	r3, [r2, #32]
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1098              		.loc 1 822 1 is_stmt 0 view .LVU209
 1099 000a 7047     		bx	lr
 1100              	.L107:
 1101              		.align	2
 1102              	.L106:
 1103 000c 00040058 		.word	1476396032
 1104              		.cfi_endproc
 1105              	.LFE172:
 1107              		.section	.text.HAL_SYSCFG_CompensationCodeSelect,"ax",%progbits
 1108              		.align	1
 1109              		.global	HAL_SYSCFG_CompensationCodeSelect
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	HAL_SYSCFG_CompensationCodeSelect:
 1115              	.LVL34:
 1116              	.LFB173:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_CompCode: Selects the code to be applied for the I/O compensation cell
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_CELL_CODE : Select Code from the cell (available in the SYSCFG_CCVR)
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_REGISTER_CODE: Select Code from the SYSCFG compensation cell code register (SYSCF
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeSelect(uint32_t SYSCFG_CompCode)
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1117              		.loc 1 833 1 is_stmt 1 view -0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_SELECT(SYSCFG_CompCode));
 1122              		.loc 1 835 3 view .LVU211
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCSR, SYSCFG_CCCSR_CS, (uint32_t)(SYSCFG_CompCode));
 1123              		.loc 1 836 3 view .LVU212
 1124 0000 034A     		ldr	r2, .L109
 1125 0002 136A     		ldr	r3, [r2, #32]
 1126 0004 23F00203 		bic	r3, r3, #2
 1127 0008 0343     		orrs	r3, r3, r0
 1128 000a 1362     		str	r3, [r2, #32]
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1129              		.loc 1 837 1 is_stmt 0 view .LVU213
 1130 000c 7047     		bx	lr
 1131              	.L110:
 1132 000e 00BF     		.align	2
 1133              	.L109:
 1134 0010 00040058 		.word	1476396032
 1135              		.cfi_endproc
 1136              	.LFE173:
 1138              		.section	.text.HAL_SYSCFG_CompensationCodeConfig,"ax",%progbits
ARM GAS  /tmp/ccNrQQIQ.s 			page 36


 1139              		.align	1
 1140              		.global	HAL_SYSCFG_CompensationCodeConfig
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1145              	HAL_SYSCFG_CompensationCodeConfig:
 1146              	.LVL35:
 1147              	.LFB174:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: PMOS compensation code
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: NMOS compensation code
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1148              		.loc 1 850 1 is_stmt 1 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152              		@ link register save eliminated.
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 1153              		.loc 1 852 3 view .LVU215
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 1154              		.loc 1 853 3 view .LVU216
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, SYSCFG_CCCR_NCC|SYSCFG_CCCR_PCC, (((uint32_t)(SYSCFG_PMOSCode)<< 4)|(uin
 1155              		.loc 1 854 3 view .LVU217
 1156 0000 044A     		ldr	r2, .L112
 1157 0002 936A     		ldr	r3, [r2, #40]
 1158 0004 23F0FF03 		bic	r3, r3, #255
 1159 0008 41EA0011 		orr	r1, r1, r0, lsl #4
 1160              	.LVL36:
 1161              		.loc 1 854 3 is_stmt 0 view .LVU218
 1162 000c 0B43     		orrs	r3, r3, r1
 1163 000e 9362     		str	r3, [r2, #40]
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1164              		.loc 1 855 1 view .LVU219
 1165 0010 7047     		bx	lr
 1166              	.L113:
 1167 0012 00BF     		.align	2
 1168              	.L112:
 1169 0014 00040058 		.word	1476396032
 1170              		.cfi_endproc
 1171              	.LFE174:
 1173              		.section	.text.HAL_SYSCFG_VDDMMC_CompensationCodeConfig,"ax",%progbits
 1174              		.align	1
 1175              		.global	HAL_SYSCFG_VDDMMC_CompensationCodeConfig
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1180              	HAL_SYSCFG_VDDMMC_CompensationCodeConfig:
ARM GAS  /tmp/ccNrQQIQ.s 			page 37


 1181              	.LVL37:
 1182              	.LFB175:
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCR_NCC_MMC)
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: VDDMMC PMOS compensation code
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: VDDMMC NMOS compensation code
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VDDMMC_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1183              		.loc 1 869 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              		@ link register save eliminated.
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 1188              		.loc 1 871 3 view .LVU221
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 1189              		.loc 1 872 3 view .LVU222
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, (SYSCFG_CCCR_NCC_MMC | SYSCFG_CCCR_PCC_MMC), (((uint32_t)(SYSCFG_PMOSCod
 1190              		.loc 1 873 3 view .LVU223
 1191 0000 044A     		ldr	r2, .L115
 1192 0002 936A     		ldr	r3, [r2, #40]
 1193 0004 23F47F43 		bic	r3, r3, #65280
 1194 0008 41EA0011 		orr	r1, r1, r0, lsl #4
 1195              	.LVL38:
 1196              		.loc 1 873 3 is_stmt 0 view .LVU224
 1197 000c 0B43     		orrs	r3, r3, r1
 1198 000e 9362     		str	r3, [r2, #40]
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1199              		.loc 1 874 1 view .LVU225
 1200 0010 7047     		bx	lr
 1201              	.L116:
 1202 0012 00BF     		.align	2
 1203              	.L115:
 1204 0014 00040058 		.word	1476396032
 1205              		.cfi_endproc
 1206              	.LFE175:
 1208              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 1209              		.align	1
 1210              		.global	HAL_DBGMCU_EnableDBGSleepMode
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1215              	HAL_DBGMCU_EnableDBGSleepMode:
 1216              	.LFB176:
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_CCCR_NCC_MMC */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT0)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
ARM GAS  /tmp/ccNrQQIQ.s 			page 38


 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout0 This parameter can be a value of :
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_DAC1_1   DAC1_out1 connected to ADC2 VINP[16]
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_VBAT4    VBAT/4 connected to ADC2 VINP[16]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout0Config(uint32_t Adc2AltRout0)
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT0(Adc2AltRout0));
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT0, Adc2AltRout0);
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT0*/
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT1)
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout1  This parameter can be a value of :
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_DAC1_2   DAC1_out2 connected to ADC2 VINP[17]
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_VREFINT  VREFINT connected to ADC2 VINP[17]
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout1Config(uint32_t Adc2AltRout1)
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT1(Adc2AltRout1));
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT1, Adc2AltRout1);
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT1*/
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain SLEEP mode
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1217              		.loc 1 912 1 is_stmt 1 view -0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1222              		.loc 1 913 3 view .LVU227
 1223 0000 024A     		ldr	r2, .L118
 1224 0002 5368     		ldr	r3, [r2, #4]
 1225 0004 43F00103 		orr	r3, r3, #1
 1226 0008 5360     		str	r3, [r2, #4]
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1227              		.loc 1 914 1 is_stmt 0 view .LVU228
 1228 000a 7047     		bx	lr
 1229              	.L119:
 1230              		.align	2
 1231              	.L118:
 1232 000c 0010005C 		.word	1543507968
 1233              		.cfi_endproc
 1234              	.LFE176:
 1236              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1237              		.align	1
 1238              		.global	HAL_DBGMCU_DisableDBGSleepMode
ARM GAS  /tmp/ccNrQQIQ.s 			page 39


 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1243              	HAL_DBGMCU_DisableDBGSleepMode:
 1244              	.LFB177:
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain SLEEP mode
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1245              		.loc 1 921 1 is_stmt 1 view -0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249              		@ link register save eliminated.
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1250              		.loc 1 922 3 view .LVU230
 1251 0000 024A     		ldr	r2, .L121
 1252 0002 5368     		ldr	r3, [r2, #4]
 1253 0004 23F00103 		bic	r3, r3, #1
 1254 0008 5360     		str	r3, [r2, #4]
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1255              		.loc 1 923 1 is_stmt 0 view .LVU231
 1256 000a 7047     		bx	lr
 1257              	.L122:
 1258              		.align	2
 1259              	.L121:
 1260 000c 0010005C 		.word	1543507968
 1261              		.cfi_endproc
 1262              	.LFE177:
 1264              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1265              		.align	1
 1266              		.global	HAL_DBGMCU_EnableDBGStopMode
 1267              		.syntax unified
 1268              		.thumb
 1269              		.thumb_func
 1271              	HAL_DBGMCU_EnableDBGStopMode:
 1272              	.LFB178:
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STOP mode
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1273              		.loc 1 931 1 is_stmt 1 view -0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1278              		.loc 1 932 3 view .LVU233
 1279 0000 024A     		ldr	r2, .L124
 1280 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccNrQQIQ.s 			page 40


 1281 0004 43F00203 		orr	r3, r3, #2
 1282 0008 5360     		str	r3, [r2, #4]
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1283              		.loc 1 933 1 is_stmt 0 view .LVU234
 1284 000a 7047     		bx	lr
 1285              	.L125:
 1286              		.align	2
 1287              	.L124:
 1288 000c 0010005C 		.word	1543507968
 1289              		.cfi_endproc
 1290              	.LFE178:
 1292              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1293              		.align	1
 1294              		.global	HAL_DBGMCU_DisableDBGStopMode
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1299              	HAL_DBGMCU_DisableDBGStopMode:
 1300              	.LFB179:
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STOP mode
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1301              		.loc 1 940 1 is_stmt 1 view -0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1306              		.loc 1 941 3 view .LVU236
 1307 0000 024A     		ldr	r2, .L127
 1308 0002 5368     		ldr	r3, [r2, #4]
 1309 0004 23F00203 		bic	r3, r3, #2
 1310 0008 5360     		str	r3, [r2, #4]
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1311              		.loc 1 942 1 is_stmt 0 view .LVU237
 1312 000a 7047     		bx	lr
 1313              	.L128:
 1314              		.align	2
 1315              	.L127:
 1316 000c 0010005C 		.word	1543507968
 1317              		.cfi_endproc
 1318              	.LFE179:
 1320              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1321              		.align	1
 1322              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1327              	HAL_DBGMCU_EnableDBGStandbyMode:
 1328              	.LFB180:
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STANDBY mode
ARM GAS  /tmp/ccNrQQIQ.s 			page 41


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1329              		.loc 1 949 1 is_stmt 1 view -0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1334              		.loc 1 950 3 view .LVU239
 1335 0000 024A     		ldr	r2, .L130
 1336 0002 5368     		ldr	r3, [r2, #4]
 1337 0004 43F00403 		orr	r3, r3, #4
 1338 0008 5360     		str	r3, [r2, #4]
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1339              		.loc 1 951 1 is_stmt 0 view .LVU240
 1340 000a 7047     		bx	lr
 1341              	.L131:
 1342              		.align	2
 1343              	.L130:
 1344 000c 0010005C 		.word	1543507968
 1345              		.cfi_endproc
 1346              	.LFE180:
 1348              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1349              		.align	1
 1350              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1355              	HAL_DBGMCU_DisableDBGStandbyMode:
 1356              	.LFB181:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STANDBY mode
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1357              		.loc 1 958 1 is_stmt 1 view -0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
 1361              		@ link register save eliminated.
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1362              		.loc 1 959 3 view .LVU242
 1363 0000 024A     		ldr	r2, .L133
 1364 0002 5368     		ldr	r3, [r2, #4]
 1365 0004 23F00403 		bic	r3, r3, #4
 1366 0008 5360     		str	r3, [r2, #4]
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1367              		.loc 1 960 1 is_stmt 0 view .LVU243
 1368 000a 7047     		bx	lr
 1369              	.L134:
 1370              		.align	2
 1371              	.L133:
 1372 000c 0010005C 		.word	1543507968
ARM GAS  /tmp/ccNrQQIQ.s 			page 42


 1373              		.cfi_endproc
 1374              	.LFE181:
 1376              		.section	.text.HAL_EnableDomain3DBGStopMode,"ax",%progbits
 1377              		.align	1
 1378              		.global	HAL_EnableDomain3DBGStopMode
 1379              		.syntax unified
 1380              		.thumb
 1381              		.thumb_func
 1383              	HAL_EnableDomain3DBGStopMode:
 1384              	.LFB182:
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGSleepMode(void)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 SLEEP mode
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGSleepMode(void)
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STOP mode
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStopMode(void)
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STOP mode
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStopMode(void)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STANDBY mode
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStandbyMode(void)
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/ccNrQQIQ.s 			page 43


1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STANDBY mode
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStandbyMode(void)
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DBGMCU_CR_DBG_STOPD3)
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STOP mode
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStopMode(void)
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1385              		.loc 1 1024 1 is_stmt 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              		@ link register save eliminated.
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1390              		.loc 1 1025 3 view .LVU245
 1391 0000 024A     		ldr	r2, .L136
 1392 0002 5368     		ldr	r3, [r2, #4]
 1393 0004 43F08003 		orr	r3, r3, #128
 1394 0008 5360     		str	r3, [r2, #4]
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1395              		.loc 1 1026 1 is_stmt 0 view .LVU246
 1396 000a 7047     		bx	lr
 1397              	.L137:
 1398              		.align	2
 1399              	.L136:
 1400 000c 0010005C 		.word	1543507968
 1401              		.cfi_endproc
 1402              	.LFE182:
 1404              		.section	.text.HAL_DisableDomain3DBGStopMode,"ax",%progbits
 1405              		.align	1
 1406              		.global	HAL_DisableDomain3DBGStopMode
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1411              	HAL_DisableDomain3DBGStopMode:
 1412              	.LFB183:
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STOP mode
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStopMode(void)
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1413              		.loc 1 1033 1 is_stmt 1 view -0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
ARM GAS  /tmp/ccNrQQIQ.s 			page 44


1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1418              		.loc 1 1034 3 view .LVU248
 1419 0000 024A     		ldr	r2, .L139
 1420 0002 5368     		ldr	r3, [r2, #4]
 1421 0004 23F08003 		bic	r3, r3, #128
 1422 0008 5360     		str	r3, [r2, #4]
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1423              		.loc 1 1035 1 is_stmt 0 view .LVU249
 1424 000a 7047     		bx	lr
 1425              	.L140:
 1426              		.align	2
 1427              	.L139:
 1428 000c 0010005C 		.word	1543507968
 1429              		.cfi_endproc
 1430              	.LFE183:
 1432              		.section	.text.HAL_EnableDomain3DBGStandbyMode,"ax",%progbits
 1433              		.align	1
 1434              		.global	HAL_EnableDomain3DBGStandbyMode
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1439              	HAL_EnableDomain3DBGStandbyMode:
 1440              	.LFB184:
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DBGMCU_CR_DBG_STOPD3*/
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DBGMCU_CR_DBG_STANDBYD3)
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STANDBY mode
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStandbyMode(void)
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1441              		.loc 1 1044 1 is_stmt 1 view -0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              		@ link register save eliminated.
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1446              		.loc 1 1045 3 view .LVU251
 1447 0000 024A     		ldr	r2, .L142
 1448 0002 5368     		ldr	r3, [r2, #4]
 1449 0004 43F48073 		orr	r3, r3, #256
 1450 0008 5360     		str	r3, [r2, #4]
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1451              		.loc 1 1046 1 is_stmt 0 view .LVU252
 1452 000a 7047     		bx	lr
 1453              	.L143:
 1454              		.align	2
 1455              	.L142:
 1456 000c 0010005C 		.word	1543507968
 1457              		.cfi_endproc
 1458              	.LFE184:
 1460              		.section	.text.HAL_DisableDomain3DBGStandbyMode,"ax",%progbits
 1461              		.align	1
 1462              		.global	HAL_DisableDomain3DBGStandbyMode
 1463              		.syntax unified
 1464              		.thumb
ARM GAS  /tmp/ccNrQQIQ.s 			page 45


 1465              		.thumb_func
 1467              	HAL_DisableDomain3DBGStandbyMode:
 1468              	.LFB185:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STANDBY mode
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStandbyMode(void)
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1469              		.loc 1 1053 1 is_stmt 1 view -0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              		@ link register save eliminated.
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1474              		.loc 1 1054 3 view .LVU254
 1475 0000 024A     		ldr	r2, .L145
 1476 0002 5368     		ldr	r3, [r2, #4]
 1477 0004 23F48073 		bic	r3, r3, #256
 1478 0008 5360     		str	r3, [r2, #4]
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1479              		.loc 1 1055 1 is_stmt 0 view .LVU255
 1480 000a 7047     		bx	lr
 1481              	.L146:
 1482              		.align	2
 1483              	.L145:
 1484 000c 0010005C 		.word	1543507968
 1485              		.cfi_endproc
 1486              	.LFE185:
 1488              		.section	.text.HAL_SetFMCMemorySwappingConfig,"ax",%progbits
 1489              		.align	1
 1490              		.global	HAL_SetFMCMemorySwappingConfig
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1495              	HAL_SetFMCMemorySwappingConfig:
 1496              	.LVL39:
 1497              	.LFB186:
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DBGMCU_CR_DBG_STANDBYD3*/
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Set the FMC Memory Mapping Swapping config.
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BankMapConfig: Defines the FMC Bank mapping configuration. This parameter can be
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL state
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SetFMCMemorySwappingConfig(uint32_t BankMapConfig)
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1498              		.loc 1 1065 1 is_stmt 1 view -0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_FMC_SWAPBMAP_MODE(BankMapConfig));
 1503              		.loc 1 1067 3 view .LVU257
ARM GAS  /tmp/ccNrQQIQ.s 			page 46


1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP, BankMapConfig);
 1504              		.loc 1 1068 3 view .LVU258
 1505 0000 034A     		ldr	r2, .L148
 1506 0002 1368     		ldr	r3, [r2]
 1507 0004 23F04073 		bic	r3, r3, #50331648
 1508 0008 0343     		orrs	r3, r3, r0
 1509 000a 1360     		str	r3, [r2]
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1510              		.loc 1 1069 1 is_stmt 0 view .LVU259
 1511 000c 7047     		bx	lr
 1512              	.L149:
 1513 000e 00BF     		.align	2
 1514              	.L148:
 1515 0010 00400052 		.word	1375748096
 1516              		.cfi_endproc
 1517              	.LFE186:
 1519              		.section	.text.HAL_GetFMCMemorySwappingConfig,"ax",%progbits
 1520              		.align	1
 1521              		.global	HAL_GetFMCMemorySwappingConfig
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1526              	HAL_GetFMCMemorySwappingConfig:
 1527              	.LFB187:
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Get FMC Bank mapping mode.
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval The FMC Bank mapping mode. This parameter can be
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** */
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetFMCMemorySwappingConfig(void)
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1528              		.loc 1 1077 1 is_stmt 1 view -0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              		@ link register save eliminated.
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return READ_BIT(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP);
 1533              		.loc 1 1078 3 view .LVU261
 1534              		.loc 1 1078 10 is_stmt 0 view .LVU262
 1535 0000 024B     		ldr	r3, .L151
 1536 0002 1868     		ldr	r0, [r3]
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1537              		.loc 1 1079 1 view .LVU263
 1538 0004 00F04070 		and	r0, r0, #50331648
 1539 0008 7047     		bx	lr
 1540              	.L152:
 1541 000a 00BF     		.align	2
 1542              	.L151:
 1543 000c 00400052 		.word	1375748096
 1544              		.cfi_endproc
 1545              	.LFE187:
 1547              		.section	.text.HAL_EXTI_EdgeConfig,"ax",%progbits
 1548              		.align	1
 1549              		.global	HAL_EXTI_EdgeConfig
 1550              		.syntax unified
 1551              		.thumb
ARM GAS  /tmp/ccNrQQIQ.s 			page 47


 1552              		.thumb_func
 1554              	HAL_EXTI_EdgeConfig:
 1555              	.LVL40:
 1556              	.LFB188:
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line edge
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note    No edge configuration for direct lines but for configurable lines:(EXTI_LINE0..EXTI_LI
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 and EXTI_LINE86.
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Edge: Specifies  EXTI line Edge used.
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_RISING_EDGE : Configurable line, with Rising edge trigger detection
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_FALLING_EDGE: Configurable line, with Falling edge trigger detection
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_EdgeConfig(uint32_t EXTI_Line , uint32_t EXTI_Edge )
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1557              		.loc 1 1094 1 is_stmt 1 view -0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
 1562              		.loc 1 1094 1 is_stmt 0 view .LVU265
 1563 0000 30B4     		push	{r4, r5}
 1564              	.LCFI6:
 1565              		.cfi_def_cfa_offset 8
 1566              		.cfi_offset 4, -8
 1567              		.cfi_offset 5, -4
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
 1568              		.loc 1 1096 3 is_stmt 1 view .LVU266
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_EDGE_LINE(EXTI_Edge));
 1569              		.loc 1 1097 3 view .LVU267
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Clear Rising Falling edge configuration */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1570              		.loc 1 1100 3 view .LVU268
 1571 0002 4309     		lsrs	r3, r0, #5
 1572 0004 20F01F0C 		bic	ip, r0, #31
 1573 0008 104C     		ldr	r4, .L157
 1574 000a 5CF80450 		ldr	r5, [ip, r4]
 1575 000e 00F01F00 		and	r0, r0, #31
 1576              	.LVL41:
 1577              		.loc 1 1100 3 is_stmt 0 view .LVU269
 1578 0012 0122     		movs	r2, #1
 1579 0014 8240     		lsls	r2, r2, r0
 1580 0016 25EA0205 		bic	r5, r5, r2
 1581 001a 4CF80450 		str	r5, [ip, r4]
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint
 1582              		.loc 1 1101 3 is_stmt 1 view .LVU270
 1583 001e 03F13073 		add	r3, r3, #46137344
 1584 0022 5B01     		lsls	r3, r3, #5
 1585 0024 1868     		ldr	r0, [r3]
 1586 0026 20EA0200 		bic	r0, r0, r2
 1587 002a 1860     		str	r0, [r3]
ARM GAS  /tmp/ccNrQQIQ.s 			page 48


1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_RISING_EDGE) == EXTI_RISING_EDGE)
 1588              		.loc 1 1103 3 view .LVU271
 1589              		.loc 1 1103 5 is_stmt 0 view .LVU272
 1590 002c 11F4801F 		tst	r1, #1048576
 1591 0030 02D0     		beq	.L154
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1592              		.loc 1 1105 4 is_stmt 1 view .LVU273
 1593 0032 1868     		ldr	r0, [r3]
 1594 0034 1043     		orrs	r0, r0, r2
 1595 0036 1860     		str	r0, [r3]
 1596              	.L154:
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_FALLING_EDGE) == EXTI_FALLING_EDGE)
 1597              		.loc 1 1107 3 view .LVU274
 1598              		.loc 1 1107 5 is_stmt 0 view .LVU275
 1599 0038 11F4001F 		tst	r1, #2097152
 1600 003c 04D0     		beq	.L153
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1601              		.loc 1 1109 4 is_stmt 1 view .LVU276
 1602 003e 5CF80430 		ldr	r3, [ip, r4]
 1603 0042 1A43     		orrs	r2, r2, r3
 1604 0044 4CF80420 		str	r2, [ip, r4]
 1605              	.L153:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1606              		.loc 1 1111 1 is_stmt 0 view .LVU277
 1607 0048 30BC     		pop	{r4, r5}
 1608              	.LCFI7:
 1609              		.cfi_restore 5
 1610              		.cfi_restore 4
 1611              		.cfi_def_cfa_offset 0
 1612 004a 7047     		bx	lr
 1613              	.L158:
 1614              		.align	2
 1615              	.L157:
 1616 004c 04000058 		.word	1476395012
 1617              		.cfi_endproc
 1618              	.LFE188:
 1620              		.section	.text.HAL_EXTI_GenerateSWInterrupt,"ax",%progbits
 1621              		.align	1
 1622              		.global	HAL_EXTI_GenerateSWInterrupt
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1627              	HAL_EXTI_GenerateSWInterrupt:
 1628              	.LVL42:
 1629              	.LFB189:
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          (EXTI_LINE0..EXTI_LINE21),EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/ccNrQQIQ.s 			page 49


1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1630              		.loc 1 1120 1 is_stmt 1 view -0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              		@ link register save eliminated.
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
 1635              		.loc 1 1122 3 view .LVU279
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->SWIER1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1636              		.loc 1 1124 3 view .LVU280
 1637 0000 20F01F0C 		bic	ip, r0, #31
 1638 0004 0549     		ldr	r1, .L160
 1639 0006 5CF80130 		ldr	r3, [ip, r1]
 1640 000a 00F01F00 		and	r0, r0, #31
 1641              	.LVL43:
 1642              		.loc 1 1124 3 is_stmt 0 view .LVU281
 1643 000e 0122     		movs	r2, #1
 1644 0010 8240     		lsls	r2, r2, r0
 1645 0012 1343     		orrs	r3, r3, r2
 1646 0014 4CF80130 		str	r3, [ip, r1]
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1647              		.loc 1 1125 1 view .LVU282
 1648 0018 7047     		bx	lr
 1649              	.L161:
 1650 001a 00BF     		.align	2
 1651              	.L160:
 1652 001c 08000058 		.word	1476395016
 1653              		.cfi_endproc
 1654              	.LFE189:
 1656              		.section	.text.HAL_EXTI_D1_ClearFlag,"ax",%progbits
 1657              		.align	1
 1658              		.global	HAL_EXTI_D1_ClearFlag
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	HAL_EXTI_D1_ClearFlag:
 1664              	.LVL44:
 1665              	.LFB190:
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D1
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_ClearFlag(uint32_t EXTI_Line)
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1666              		.loc 1 1135 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              		@ link register save eliminated.
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
ARM GAS  /tmp/ccNrQQIQ.s 			page 50


1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D1_LINE(EXTI_Line));
 1671              		.loc 1 1137 2 view .LVU284
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
 1672              		.loc 1 1138 2 view .LVU285
 1673 0000 00F01F02 		and	r2, r0, #31
 1674 0004 4009     		lsrs	r0, r0, #5
 1675              	.LVL45:
 1676              		.loc 1 1138 2 is_stmt 0 view .LVU286
 1677 0006 0001     		lsls	r0, r0, #4
 1678 0008 0123     		movs	r3, #1
 1679 000a 9340     		lsls	r3, r3, r2
 1680 000c 014A     		ldr	r2, .L163
 1681 000e 8350     		str	r3, [r0, r2]
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1682              		.loc 1 1140 1 view .LVU287
 1683 0010 7047     		bx	lr
 1684              	.L164:
 1685 0012 00BF     		.align	2
 1686              	.L163:
 1687 0014 88000058 		.word	1476395144
 1688              		.cfi_endproc
 1689              	.LFE190:
 1691              		.section	.text.HAL_EXTI_D1_EventInputConfig,"ax",%progbits
 1692              		.align	1
 1693              		.global	HAL_EXTI_D1_EventInputConfig
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1698              	HAL_EXTI_D1_EventInputConfig:
 1699              	.LVL46:
 1700              	.LFB191:
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D2
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_ClearFlag(uint32_t EXTI_Line)
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D1
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
ARM GAS  /tmp/ccNrQQIQ.s 			page 51


1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1701              		.loc 1 1170 1 is_stmt 1 view -0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              		.loc 1 1170 1 is_stmt 0 view .LVU289
 1706 0000 10B5     		push	{r4, lr}
 1707              	.LCFI8:
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 4, -8
 1710              		.cfi_offset 14, -4
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D1_LINE(EXTI_Line));
 1711              		.loc 1 1172 3 is_stmt 1 view .LVU290
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
 1712              		.loc 1 1173 3 view .LVU291
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
 1713              		.loc 1 1175 3 view .LVU292
 1714              		.loc 1 1175 5 is_stmt 0 view .LVU293
 1715 0002 11F4803F 		tst	r1, #65536
 1716 0006 0ED0     		beq	.L166
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      if( EXTI_LineCmd == 0UL)
 1717              		.loc 1 1177 6 is_stmt 1 view .LVU294
 1718              		.loc 1 1177 8 is_stmt 0 view .LVU295
 1719 0008 EAB9     		cbnz	r2, .L167
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        /* Clear EXTI line configuration */
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1720              		.loc 1 1180 9 is_stmt 1 view .LVU296
 1721 000a 1C4B     		ldr	r3, .L171
 1722 000c 03EB5013 		add	r3, r3, r0, lsr #5
 1723 0010 1B01     		lsls	r3, r3, #4
 1724 0012 1C68     		ldr	r4, [r3]
 1725 0014 00F01F0E 		and	lr, r0, #31
 1726 0018 4FF0010C 		mov	ip, #1
 1727 001c 0CFA0EFC 		lsl	ip, ip, lr
 1728 0020 24EA0C04 		bic	r4, r4, ip
 1729 0024 1C60     		str	r4, [r3]
 1730              	.L166:
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      else
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
 1731              		.loc 1 1188 3 view .LVU297
 1732              		.loc 1 1188 5 is_stmt 0 view .LVU298
 1733 0026 11F4003F 		tst	r1, #131072
 1734 002a 0BD0     		beq	.L165
ARM GAS  /tmp/ccNrQQIQ.s 			page 52


1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
 1735              		.loc 1 1190 5 is_stmt 1 view .LVU299
 1736              		.loc 1 1190 7 is_stmt 0 view .LVU300
 1737 002c D2B9     		cbnz	r2, .L169
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1738              		.loc 1 1193 7 is_stmt 1 view .LVU301
 1739 002e 4309     		lsrs	r3, r0, #5
 1740 0030 1B01     		lsls	r3, r3, #4
 1741 0032 134C     		ldr	r4, .L171+4
 1742 0034 1A59     		ldr	r2, [r3, r4]
 1743              	.LVL47:
 1744              		.loc 1 1193 7 is_stmt 0 view .LVU302
 1745 0036 00F01F00 		and	r0, r0, #31
 1746              	.LVL48:
 1747              		.loc 1 1193 7 view .LVU303
 1748 003a 0121     		movs	r1, #1
 1749              	.LVL49:
 1750              		.loc 1 1193 7 view .LVU304
 1751 003c 8140     		lsls	r1, r1, r0
 1752 003e 22EA0102 		bic	r2, r2, r1
 1753 0042 1A51     		str	r2, [r3, r4]
 1754              	.L165:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1755              		.loc 1 1200 1 view .LVU305
 1756 0044 10BD     		pop	{r4, pc}
 1757              	.LVL50:
 1758              	.L167:
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
 1759              		.loc 1 1184 9 is_stmt 1 view .LVU306
 1760 0046 0D4B     		ldr	r3, .L171
 1761 0048 03EB5013 		add	r3, r3, r0, lsr #5
 1762 004c 1B01     		lsls	r3, r3, #4
 1763 004e 1C68     		ldr	r4, [r3]
 1764 0050 00F01F0E 		and	lr, r0, #31
 1765 0054 4FF0010C 		mov	ip, #1
 1766 0058 0CFA0EFC 		lsl	ip, ip, lr
 1767 005c 44EA0C04 		orr	r4, r4, ip
 1768 0060 1C60     		str	r4, [r3]
 1769 0062 E0E7     		b	.L166
 1770              	.L169:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1771              		.loc 1 1197 7 view .LVU307
 1772 0064 4309     		lsrs	r3, r0, #5
 1773 0066 1B01     		lsls	r3, r3, #4
 1774 0068 054C     		ldr	r4, .L171+4
 1775 006a 1A59     		ldr	r2, [r3, r4]
 1776              	.LVL51:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
ARM GAS  /tmp/ccNrQQIQ.s 			page 53


 1777              		.loc 1 1197 7 is_stmt 0 view .LVU308
 1778 006c 00F01F00 		and	r0, r0, #31
 1779              	.LVL52:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1780              		.loc 1 1197 7 view .LVU309
 1781 0070 0121     		movs	r1, #1
 1782              	.LVL53:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1783              		.loc 1 1197 7 view .LVU310
 1784 0072 8140     		lsls	r1, r1, r0
 1785 0074 0A43     		orrs	r2, r2, r1
 1786 0076 1A51     		str	r2, [r3, r4]
 1787              		.loc 1 1200 1 view .LVU311
 1788 0078 E4E7     		b	.L165
 1789              	.L172:
 1790 007a 00BF     		.align	2
 1791              	.L171:
 1792 007c 08008005 		.word	92274696
 1793 0080 84000058 		.word	1476395140
 1794              		.cfi_endproc
 1795              	.LFE191:
 1797              		.section	.text.HAL_EXTI_D3_EventInputConfig,"ax",%progbits
 1798              		.align	1
 1799              		.global	HAL_EXTI_D3_EventInputConfig
 1800              		.syntax unified
 1801              		.thumb
 1802              		.thumb_func
 1804              	HAL_EXTI_D3_EventInputConfig:
 1805              	.LVL54:
 1806              	.LFB192:
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D2
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)),(u
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
ARM GAS  /tmp/ccNrQQIQ.s 			page 54


1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (ui
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D3
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0...EXTI_LINE15),(EXTI_LINE19...EXTI_LINE21),EXTI_LINE25, EXTI_LINE34,
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE35,EXTI_LINE41,(EXTI_LINE48...EXTI_LINE53)
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_ClearSrc: Specifies the clear source of D3 pending event.
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH6_CLEAR : BDMA ch6 event selected as D3 domain pendclear source
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH7_CLEAR : BDMA ch7 event selected as D3 domain pendclear source
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM4_OUT_CLEAR : LPTIM4 out selected as D3 domain pendclear source
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM5_OUT_CLEAR : LPTIM5 out selected as D3 domain pendclear source
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D3_EventInputConfig(uint32_t EXTI_Line, uint32_t EXTI_LineCmd , uint32_t EXTI_ClearSr
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1807              		.loc 1 1264 1 is_stmt 1 view -0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 0
 1810              		@ frame_needed = 0, uses_anonymous_args = 0
 1811              		.loc 1 1264 1 is_stmt 0 view .LVU313
 1812 0000 10B5     		push	{r4, lr}
 1813              	.LCFI9:
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 4, -8
 1816              		.cfi_offset 14, -4
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __IO uint32_t *pRegv;
 1817              		.loc 1 1265 3 is_stmt 1 view .LVU314
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_LINE(EXTI_Line));
 1818              		.loc 1 1268 3 view .LVU315
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_CLEAR(EXTI_ClearSrc));
 1819              		.loc 1 1269 3 view .LVU316
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( EXTI_LineCmd == 0UL)
ARM GAS  /tmp/ccNrQQIQ.s 			page 55


 1820              		.loc 1 1271 3 view .LVU317
 1821              		.loc 1 1271 5 is_stmt 0 view .LVU318
 1822 0002 09BB     		cbnz	r1, .L174
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) + ((EXTI_Line >> 5 ) * 0x20UL)),(uin
 1823              		.loc 1 1274 5 is_stmt 1 view .LVU319
 1824 0004 20F01F03 		bic	r3, r0, #31
 1825 0008 194C     		ldr	r4, .L179
 1826 000a 1959     		ldr	r1, [r3, r4]
 1827              	.LVL55:
 1828              		.loc 1 1274 5 is_stmt 0 view .LVU320
 1829 000c 00F01F0E 		and	lr, r0, #31
 1830 0010 4FF0010C 		mov	ip, #1
 1831 0014 0CFA0EFC 		lsl	ip, ip, lr
 1832 0018 21EA0C01 		bic	r1, r1, ip
 1833 001c 1951     		str	r1, [r3, r4]
 1834              	.L175:
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) +((EXTI_Line >> 5 ) * 0x20UL)), (uint3
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(((EXTI_Line>>4)%2UL) == 0UL)
 1835              		.loc 1 1281 3 is_stmt 1 view .LVU321
 1836              		.loc 1 1281 5 is_stmt 0 view .LVU322
 1837 001e 10F0100F 		tst	r0, #16
 1838 0022 1FD1     		bne	.L176
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1L)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1839              		.loc 1 1283 5 is_stmt 1 view .LVU323
 1840              		.loc 1 1283 83 is_stmt 0 view .LVU324
 1841 0024 20F01F03 		bic	r3, r0, #31
 1842              		.loc 1 1283 62 view .LVU325
 1843 0028 1249     		ldr	r1, .L179+4
 1844 002a 1944     		add	r1, r1, r3
 1845              	.LVL56:
 1846              	.L177:
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1H)) + ((EXTI_Line >> 5 ) * 0x20UL));
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(*pRegv, (uint32_t)(3UL << ((EXTI_Line*2UL) & 0x1FUL)), (uint32_t)(EXTI_ClearSrc << ((E
 1847              		.loc 1 1289 3 is_stmt 1 view .LVU326
 1848 002c 0B68     		ldr	r3, [r1]
 1849 002e 4000     		lsls	r0, r0, #1
 1850              	.LVL57:
 1851              		.loc 1 1289 3 is_stmt 0 view .LVU327
 1852 0030 00F01E00 		and	r0, r0, #30
 1853 0034 4FF0030C 		mov	ip, #3
 1854 0038 0CFA00FC 		lsl	ip, ip, r0
 1855 003c 23EA0C03 		bic	r3, r3, ip
 1856 0040 8240     		lsls	r2, r2, r0
 1857              	.LVL58:
 1858              		.loc 1 1289 3 view .LVU328
ARM GAS  /tmp/ccNrQQIQ.s 			page 56


 1859 0042 1A43     		orrs	r2, r2, r3
 1860 0044 0A60     		str	r2, [r1]
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1861              		.loc 1 1291 1 view .LVU329
 1862 0046 10BD     		pop	{r4, pc}
 1863              	.LVL59:
 1864              	.L174:
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1865              		.loc 1 1278 5 is_stmt 1 view .LVU330
 1866 0048 20F01F03 		bic	r3, r0, #31
 1867 004c 084C     		ldr	r4, .L179
 1868 004e 1959     		ldr	r1, [r3, r4]
 1869              	.LVL60:
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1870              		.loc 1 1278 5 is_stmt 0 view .LVU331
 1871 0050 00F01F0E 		and	lr, r0, #31
 1872 0054 4FF0010C 		mov	ip, #1
 1873 0058 0CFA0EFC 		lsl	ip, ip, lr
 1874 005c 41EA0C01 		orr	r1, r1, ip
 1875 0060 1951     		str	r1, [r3, r4]
 1876 0062 DCE7     		b	.L175
 1877              	.L176:
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1878              		.loc 1 1287 5 is_stmt 1 view .LVU332
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1879              		.loc 1 1287 83 is_stmt 0 view .LVU333
 1880 0064 20F01F03 		bic	r3, r0, #31
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1881              		.loc 1 1287 62 view .LVU334
 1882 0068 0349     		ldr	r1, .L179+8
 1883 006a 1944     		add	r1, r1, r3
 1884              	.LVL61:
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1885              		.loc 1 1287 62 view .LVU335
 1886 006c DEE7     		b	.L177
 1887              	.L180:
 1888 006e 00BF     		.align	2
 1889              	.L179:
 1890 0070 0C000058 		.word	1476395020
 1891 0074 10000058 		.word	1476395024
 1892 0078 14000058 		.word	1476395028
 1893              		.cfi_endproc
 1894              	.LFE192:
 1896              		.global	uwTickFreq
 1897              		.section	.data.uwTickFreq,"aw"
 1900              	uwTickFreq:
 1901 0000 01       		.byte	1
 1902              		.global	uwTickPrio
 1903              		.section	.data.uwTickPrio,"aw"
 1904              		.align	2
 1907              	uwTickPrio:
 1908 0000 10000000 		.word	16
 1909              		.global	uwTick
 1910              		.section	.bss.uwTick,"aw",%nobits
 1911              		.align	2
 1914              	uwTick:
ARM GAS  /tmp/ccNrQQIQ.s 			page 57


 1915 0000 00000000 		.space	4
 1916              		.text
 1917              	.Letext0:
 1918              		.file 2 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7a3xxq.h"
 1919              		.file 3 "/home/jack/ece331/Downloads/arm-gnu-toolchain-12.2.rel1-aarch64-arm-none-eabi/arm-none-ea
 1920              		.file 4 "/home/jack/ece331/Downloads/arm-gnu-toolchain-12.2.rel1-aarch64-arm-none-eabi/arm-none-ea
 1921              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 1922              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1923              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1924              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1925              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1926              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/ccNrQQIQ.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal.c
     /tmp/ccNrQQIQ.s:20     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccNrQQIQ.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccNrQQIQ.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccNrQQIQ.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccNrQQIQ.s:58     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccNrQQIQ.s:64     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccNrQQIQ.s:132    .text.HAL_DeInit:0000000000000068 $d
     /tmp/ccNrQQIQ.s:143    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccNrQQIQ.s:149    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccNrQQIQ.s:223    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccNrQQIQ.s:1900   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccNrQQIQ.s:1907   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccNrQQIQ.s:230    .text.HAL_Init:0000000000000000 $t
     /tmp/ccNrQQIQ.s:236    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccNrQQIQ.s:313    .text.HAL_Init:000000000000004c $d
     /tmp/ccNrQQIQ.s:321    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccNrQQIQ.s:327    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccNrQQIQ.s:348    .text.HAL_IncTick:0000000000000010 $d
     /tmp/ccNrQQIQ.s:1914   .bss.uwTick:0000000000000000 uwTick
     /tmp/ccNrQQIQ.s:354    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccNrQQIQ.s:360    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccNrQQIQ.s:376    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccNrQQIQ.s:381    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccNrQQIQ.s:387    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccNrQQIQ.s:402    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccNrQQIQ.s:407    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccNrQQIQ.s:413    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccNrQQIQ.s:470    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccNrQQIQ.s:476    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccNrQQIQ.s:482    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccNrQQIQ.s:497    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccNrQQIQ.s:502    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccNrQQIQ.s:508    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccNrQQIQ.s:561    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccNrQQIQ.s:566    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccNrQQIQ.s:572    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccNrQQIQ.s:592    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccNrQQIQ.s:598    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccNrQQIQ.s:618    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccNrQQIQ.s:624    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccNrQQIQ.s:638    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccNrQQIQ.s:643    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccNrQQIQ.s:649    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccNrQQIQ.s:666    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccNrQQIQ.s:671    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccNrQQIQ.s:677    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccNrQQIQ.s:694    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccNrQQIQ.s:699    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccNrQQIQ.s:705    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccNrQQIQ.s:720    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccNrQQIQ.s:725    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccNrQQIQ.s:731    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccNrQQIQ.s:746    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccNrQQIQ.s:751    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccNrQQIQ.s:757    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccNrQQIQ.s 			page 59


     /tmp/ccNrQQIQ.s:772    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccNrQQIQ.s:777    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:783    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
     /tmp/ccNrQQIQ.s:803    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000010 $d
     /tmp/ccNrQQIQ.s:808    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:814    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
     /tmp/ccNrQQIQ.s:834    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000010 $d
     /tmp/ccNrQQIQ.s:839    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:845    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
     /tmp/ccNrQQIQ.s:865    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000010 $d
     /tmp/ccNrQQIQ.s:870    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 $t
     /tmp/ccNrQQIQ.s:876    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 HAL_SYSCFG_EnableVREFBUF
     /tmp/ccNrQQIQ.s:931    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000030 $d
     /tmp/ccNrQQIQ.s:936    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 $t
     /tmp/ccNrQQIQ.s:942    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 HAL_SYSCFG_DisableVREFBUF
     /tmp/ccNrQQIQ.s:959    .text.HAL_SYSCFG_DisableVREFBUF:000000000000000c $d
     /tmp/ccNrQQIQ.s:964    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:970    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 HAL_SYSCFG_AnalogSwitchConfig
     /tmp/ccNrQQIQ.s:991    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000010 $d
     /tmp/ccNrQQIQ.s:996    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1002   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccNrQQIQ.s:1019   .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccNrQQIQ.s:1024   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1030   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccNrQQIQ.s:1047   .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccNrQQIQ.s:1052   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1058   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_EnableIOSpeedOptimize
     /tmp/ccNrQQIQ.s:1075   .text.HAL_SYSCFG_EnableIOSpeedOptimize:000000000000000c $d
     /tmp/ccNrQQIQ.s:1080   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1086   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_DisableIOSpeedOptimize
     /tmp/ccNrQQIQ.s:1103   .text.HAL_SYSCFG_DisableIOSpeedOptimize:000000000000000c $d
     /tmp/ccNrQQIQ.s:1108   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1114   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 HAL_SYSCFG_CompensationCodeSelect
     /tmp/ccNrQQIQ.s:1134   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000010 $d
     /tmp/ccNrQQIQ.s:1139   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1145   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 HAL_SYSCFG_CompensationCodeConfig
     /tmp/ccNrQQIQ.s:1169   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000014 $d
     /tmp/ccNrQQIQ.s:1174   .text.HAL_SYSCFG_VDDMMC_CompensationCodeConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1180   .text.HAL_SYSCFG_VDDMMC_CompensationCodeConfig:0000000000000000 HAL_SYSCFG_VDDMMC_CompensationCodeConfig
     /tmp/ccNrQQIQ.s:1204   .text.HAL_SYSCFG_VDDMMC_CompensationCodeConfig:0000000000000014 $d
     /tmp/ccNrQQIQ.s:1209   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1215   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccNrQQIQ.s:1232   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1237   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1243   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccNrQQIQ.s:1260   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1265   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1271   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccNrQQIQ.s:1288   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1293   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1299   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccNrQQIQ.s:1316   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1321   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1327   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccNrQQIQ.s:1344   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1349   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1355   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
ARM GAS  /tmp/ccNrQQIQ.s 			page 60


     /tmp/ccNrQQIQ.s:1372   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1377   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1383   .text.HAL_EnableDomain3DBGStopMode:0000000000000000 HAL_EnableDomain3DBGStopMode
     /tmp/ccNrQQIQ.s:1400   .text.HAL_EnableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1405   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1411   .text.HAL_DisableDomain3DBGStopMode:0000000000000000 HAL_DisableDomain3DBGStopMode
     /tmp/ccNrQQIQ.s:1428   .text.HAL_DisableDomain3DBGStopMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1433   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1439   .text.HAL_EnableDomain3DBGStandbyMode:0000000000000000 HAL_EnableDomain3DBGStandbyMode
     /tmp/ccNrQQIQ.s:1456   .text.HAL_EnableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1461   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1467   .text.HAL_DisableDomain3DBGStandbyMode:0000000000000000 HAL_DisableDomain3DBGStandbyMode
     /tmp/ccNrQQIQ.s:1484   .text.HAL_DisableDomain3DBGStandbyMode:000000000000000c $d
     /tmp/ccNrQQIQ.s:1489   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1495   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 HAL_SetFMCMemorySwappingConfig
     /tmp/ccNrQQIQ.s:1515   .text.HAL_SetFMCMemorySwappingConfig:0000000000000010 $d
     /tmp/ccNrQQIQ.s:1520   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1526   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 HAL_GetFMCMemorySwappingConfig
     /tmp/ccNrQQIQ.s:1543   .text.HAL_GetFMCMemorySwappingConfig:000000000000000c $d
     /tmp/ccNrQQIQ.s:1548   .text.HAL_EXTI_EdgeConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1554   .text.HAL_EXTI_EdgeConfig:0000000000000000 HAL_EXTI_EdgeConfig
     /tmp/ccNrQQIQ.s:1616   .text.HAL_EXTI_EdgeConfig:000000000000004c $d
     /tmp/ccNrQQIQ.s:1621   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1627   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 HAL_EXTI_GenerateSWInterrupt
     /tmp/ccNrQQIQ.s:1652   .text.HAL_EXTI_GenerateSWInterrupt:000000000000001c $d
     /tmp/ccNrQQIQ.s:1657   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1663   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 HAL_EXTI_D1_ClearFlag
     /tmp/ccNrQQIQ.s:1687   .text.HAL_EXTI_D1_ClearFlag:0000000000000014 $d
     /tmp/ccNrQQIQ.s:1692   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1698   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 HAL_EXTI_D1_EventInputConfig
     /tmp/ccNrQQIQ.s:1792   .text.HAL_EXTI_D1_EventInputConfig:000000000000007c $d
     /tmp/ccNrQQIQ.s:1798   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 $t
     /tmp/ccNrQQIQ.s:1804   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 HAL_EXTI_D3_EventInputConfig
     /tmp/ccNrQQIQ.s:1890   .text.HAL_EXTI_D3_EventInputConfig:0000000000000070 $d
     /tmp/ccNrQQIQ.s:1904   .data.uwTickPrio:0000000000000000 $d
     /tmp/ccNrQQIQ.s:1911   .bss.uwTick:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
D1CorePrescTable
SystemD2Clock
